
## Phase 1 : DÃ©couverte de la faille


Un bon moyen de tester si un site va etre vulnerable a une attaque de Local file inclusion est de verifier si le site va traiter les url envoyees par l'utilisateur en enlevant par exemple les caracteres speciaux.

En allant sur la page suivante http://10.13.200.219/.abou/t.html on peut voir que le site n'enleve pas les caracteres speciaux.

Dans ce cas on peut appliquer la methode classique d'exploit de LFI.

## Phase 2 : Exploitation de la faille

L'objectif est d'avoir acces a certains fichiers qui ne devraient pas nous etre accessible. Le fichier le plus recherche dans ce genre de faille ets le fichier /etc/passwd, un fichier present sur les serveur linux qui contient des informations sensibles sur les utilisateurs du serveur. En tapant l'url http://10.13.200.219/?page=etc/passwd on ne trouve pas de fichier. 

Mais souvent les pages accessibles sont rangees dans un sous dossier, il faut donc aller au dela de ce sous dossier et arriver a la racine du serveur pour retrouver ce fichier. 

On entre donc l'url suivante :

http://10.13.200.219/?page=../../../../../../../etc/passwd

et on trouve le flag suivant : b12c4b2cb8094750ae121a676269aa9e2872d07c06e429d25a63196ec1c8c1d0

## Phase 3 : Comment corriger la faille

Il est possible d'eviter ce genre de vulnerabilites en interdisant les caracteres speciaux comme le / dans les arguments des requetes.

Mais dans ce cas il n'est plus possible de ranger les pages internet dans des sous dossier etc sur l'architecture du serveur.
Si l'on souhaite garder la possibilite d'avoir une arburescence un peu plus clair il est possible de creer une liste de pages autorisees liees a des parametres. 
Si jamais l'utilisateur essaye d'acceder a une page sensible avec un parametre pas forcement pour il est alors possible de stopper la requete. 

Par exemple pour l'argument page il ne dverait pas etre possible d'avoir acces au fichier etc/passwd qui ne devrait pas figurer dans la liste des pages autorisees et donc la requete devrait echouees.



